# Generated by Django 4.2.13 on 2024-08-24 12:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import game.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to=game.models.achievement_image_upload_path)),
                ('task', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlocked', models.BooleanField(default=False)),
                ('achieved_at', models.DateTimeField(auto_now_add=True)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.achievement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TournamentGameRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_waiting', models.BooleanField(default=True)),
                ('crateated_at', models.DateTimeField(auto_now_add=True)),
                ('player1_connected', models.BooleanField(default=False)),
                ('player2_connected', models.BooleanField(default=False)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament_player1', to='user_management.player')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tournament_player2', to='user_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='InviteGameRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_waiting', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('player1_connected', models.BooleanField(default=False)),
                ('player2_connected', models.BooleanField(default=False)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invited1', to='user_management.player')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invited2', to='user_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background', models.CharField(max_length=255)),
                ('paddle', models.CharField(max_length=255)),
                ('keys', models.CharField(max_length=255, null=True)),
                ('gameMode', models.CharField(default='flesh', max_length=255)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_waiting', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('player1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player1', to='user_management.player')),
                ('player2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player2', to='user_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winner_score', models.IntegerField()),
                ('loser_score', models.IntegerField()),
                ('game_type', models.CharField(choices=[('pingpong', 'Ping Pong'), ('xo', 'XO')], max_length=20)),
                ('match_type', models.CharField(choices=[('single', 'Single Match'), ('tournament', 'Tournament Match')], max_length=20)),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('loser_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lost_games', to='user_management.player')),
                ('winner_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='won_games', to='user_management.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('A', 'ACCEPTED'), ('P', 'PENDING'), ('D', 'DECLINED')], default='P', max_length=1)),
                ('send_at', models.DateTimeField(auto_now_add=True)),
                ('invite_game_room', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='game.invitegameroom')),
                ('player_receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('player_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('player_sender', 'player_receiver')},
            },
        ),
    ]
